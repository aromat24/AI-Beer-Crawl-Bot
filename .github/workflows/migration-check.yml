name: Database Migration Check

on:
  pull_request:
    paths:
      - 'src/models/**'
      - 'migrations/**'
      - 'requirements.txt'

jobs:
  migration-check:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: beer_crawl_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install psycopg2-binary

    - name: Check for migration conflicts
      run: |
        export DATABASE_URL=postgresql://postgres:postgres@localhost:5432/beer_crawl_test
        export FLASK_APP=app.py
        
        # Initialize database
        flask db init || true
        
        # Check if migrations can be applied cleanly
        flask db migrate -m "Test migration check"
        flask db upgrade
        
        # Verify database schema
        python -c "
        from app import create_app
        from src.models import db
        app = create_app('testing')
        with app.app_context():
            db.create_all()
            print('Database schema verification passed')
        "

    - name: Check for model consistency
      run: |
        python -c "
        import sys
        from src.models.beer_crawl import UserPreferences, Bar, CrawlGroup, GroupMember, CrawlSession
        from src.models.user import User
        print('All models imported successfully')
        "

    - name: Validate migration reversibility
      run: |
        export DATABASE_URL=postgresql://postgres:postgres@localhost:5432/beer_crawl_test
        export FLASK_APP=app.py
        
        # Test downgrade
        flask db downgrade -1 || echo "Downgrade test completed"
        
        # Test upgrade again
        flask db upgrade
        
        echo "Migration reversibility test completed"
